Basic:

What is the Contiki operating system?
What are some of the key features of Contiki?
What type of devices is Contiki typically used on?
What programming languages can be used to develop applications for Contiki?
How does Contiki support low-power consumption?

Intermediate:

How does Contiki handle memory management?
What is the ContikiMAC protocol, and how does it improve energy efficiency?
How does Contiki support networking and communication between devices?
What is the role of the Contiki shell, and how is it used for debugging and testing?
How does Contiki support real-time scheduling and event-driven programming?

Advanced:

How does Contiki's uIPv6 stack support IoT applications and low-power wireless networks?
How does Contiki leverage hardware support for energy efficiency, such as power-saving modes and sleep states?
What is the role of the Cooja network simulator in Contiki development, and how is it used?
How does Contiki support secure communication and authentication between devices?
What are some examples of real-world applications that have been developed using Contiki, and how has the OS been customized to suit those needs?